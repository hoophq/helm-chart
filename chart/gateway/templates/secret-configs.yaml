apiVersion: v1
kind: Secret
metadata:
  name: hoop-config
type: Opaque
stringData:
  XTDB_ADDRESS: "{{ .Values.config.XTDB_ADDRESS | default "http://127.0.0.1:3001" }}"
  {{- with .Values.xtdbConfig }}
  POSTGRES_DB_URI: "postgresql://{{ .PG_USER }}:{{ .PG_PASSWORD }}@{{ .PG_HOST }}:{{ .PG_PORT }}/{{ .PG_DB }}"
  {{- end }}
  API_URL: "{{ required "config.API_URL is required" .Values.config.API_URL }}"
  GRPC_URL: "{{ .Values.config.GRPC_URL | default "" }}"
  LEGACY_API: "{{ .Values.config.LEGACY_API | default "false" }}"
  PGREST_ROLE: "{{ .Values.config.PGREST_ROLE }}"
  LEGACY_XTDB: "{{ .Values.config.LEGACY_XTDB | default "false" }}"
  GIN_MODE: "{{ .Values.config.GIN_MODE | default "release" }}"
  LOG_ENCODING: "{{ .Values.config.LOG_ENCODING | default "json" }}"
  LOG_LEVEL: "{{ .Values.config.LOG_LEVEL | default "info" }}"
  LOG_GRPC: "{{ .Values.config.LOG_GRPC | default "0" }}"
  GODEBUG: "http2debug={{ .Values.config.LOG_GRPC | default 0 }}"
  IDP_CLIENT_ID: "{{ required "config.IDP_CLIENT_ID is required" .Values.config.IDP_CLIENT_ID }}"
  IDP_CLIENT_SECRET: "{{ required "config.IDP_CLIENT_SECRET is required" .Values.config.IDP_CLIENT_SECRET }}"
  IDP_ISSUER: "{{ required "config.IDP_ISSUER is required" .Values.config.IDP_ISSUER }}"
  IDP_AUDIENCE: "{{ .Values.config.IDP_AUDIENCE }}"
  IDP_CUSTOM_SCOPES: "{{ .Values.config.IDP_CUSTOM_SCOPES }}"
  TLS_KEY: "{{ .Values.config.TLS_KEY }}"
  TLS_CERT: "{{ .Values.config.TLS_CERT }}"
  TLS_CA: "{{ .Values.config.TLS_CA }}"
  GOOGLE_APPLICATION_CREDENTIALS_JSON: '{{ .Values.config.GOOGLE_APPLICATION_CREDENTIALS_JSON }}'
  WEBHOOK_APPKEY: "{{ .Values.config.WEBHOOK_APPKEY }}"
  PYROSCOPE_AUTH_TOKEN: "{{ .Values.config.PYROSCOPE_AUTH_TOKEN }}"
  PYROSCOPE_INGEST_URL: "{{ .Values.config.PYROSCOPE_INGEST_URL }}"
  SEGMENT_KEY: "{{ .Values.config.SEGMENT_KEY }}"
  AGENT_SENTRY_DSN: "{{ .Values.config.AGENT_SENTRY_DSN }}"
  SENTRY_DSN: "{{ .Values.config.SENTRY_DSN }}"
  ADMIN_USERNAME: "{{ .Values.config.ADMIN_USERNAME | default "admin" }}"
  PLUGIN_AUDIT_PATH: "{{ .Values.config.PLUGIN_AUDIT_PATH | default "/opt/hoop/sessions" }}"
  PLUGIN_INDEX_PATH: "{{ .Values.config.PLUGIN_INDEX_PATH | default "/opt/hoop/sessions/indexes" }}"
  MAGIC_BELL_API_KEY: "{{ .Values.config.MAGIC_BELL_API_KEY }}"
  MAGIC_BELL_API_SECRET: "{{ .Values.config.MAGIC_BELL_API_SECRET }}"
  PLUGIN_REGISTRY_URL: "{{ .Values.config.PLUGIN_REGISTRY_URL }}"
  {{- with .Values.config.notification }}
  NOTIFICATIONS_BRIDGE_CONFIG: '{"slackBotToken": "{{ required "config.notification.slackBotToken is required" .slackBotToken }}",  "bridgeUrl": "{{ .bridgeUrl }}"}'
  {{- end }}
  SMTP_HOST: "{{ .Values.config.SMTP_HOST }}"
  SMTP_PORT: "{{ .Values.config.SMTP_PORT }}"
  SMTP_USER: "{{ .Values.config.SMTP_USER }}"
  SMTP_PASS: "{{ .Values.config.SMTP_PASS }}"
  SLACK_CLIENT_ID: "{{ .Values.config.SLACK_CLIENT_ID }}"
  SLACK_CLIENT_SECRET: "{{ .Values.config.SLACK_CLIENT_SECRET }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: xtdb-config
type: Opaque
stringData:
  PG_HOST: "{{ required "xtdbConfig.PG_HOST is required" .Values.xtdbConfig.PG_HOST }}"
  PG_PORT: "{{ .Values.xtdbConfig.PG_PORT | default "5432" }}"
  PG_USER: "{{ required "xtdbConfig.PG_USER is required" .Values.xtdbConfig.PG_USER }}"
  PG_PASSWORD: "{{ required "xtdbConfig.PG_PASSWORD is required" .Values.xtdbConfig.PG_PASSWORD }}"
  PG_DB: "{{ required "xtdbConfig.PG_DB is required" .Values.xtdbConfig.PG_DB }}"
  LISTEN_ADDR: "{{ .Values.xtdbConfig.LISTEN_ADDR | default "0.0.0.0" }}"
  ROCKS_DB_CACHE_SIZE: "{{ .Values.xtdbConfig.ROCKS_DB_CACHE_SIZE | default "536870912" }}"
  ROCKS_DB_DIR: "{{ .Values.xtdbConfig.ROCKS_DB_DIR | default "/opt/hoop/sessions/rocksdb" }}"
  {{- with .Values.xtdbConfig.JVM_OPTS }}
  JVM_OPTS: "{{ . }}"
  {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: defaultagent-config
type: Opaque
stringData:
  {{- with .Values.agentConfig.gateway }}
  HOOP_DSN: "{{ .dsn }}"
  # DEPRECATED
  HOOP_TOKEN: "{{ .token }}"
  # DEPRECATED
  HOOP_GRPCURL: "{{ .grpc_url }}"
  TLS_SERVER_NAME: "{{ .tls_server_name }}"
  {{- end }}
  AUTO_REGISTER: "{{ .Values.agentConfig.AUTO_REGISTER }}"
  LOG_ENCODING: "{{ .Values.agentConfig.LOG_ENCODING | default "json" }}"
  LOG_LEVEL: "{{ .Values.agentConfig.LOG_LEVEL | default "info" }}"
  LOG_GRPC: "{{ .Values.agentConfig.LOG_GRPC | default "0" }}"
  GODEBUG: "http2debug={{ .Values.agentConfig.LOG_GRPC | default 0 }}"
